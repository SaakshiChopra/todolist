{"version":3,"sources":["Card1.js","Map1.js","App.js","reportWebVitals.js","index.js"],"names":["Card1","data","handleDelete","handleModal","style","padding","Card","raised","fluid","centered","Content","Description","Button","basic","color","content","onClick","icon","floated","Icon","name","Map1","dataList","map","d","App","props","fun","setState","open","state","handleData","event","target","value","handleAdd","error1","filter","post","handleEdit","old1","str","new1","text1","Tpost","handleText1","backgroundImage","backgroundSize","height","width","backgroundColor","marginLeft","marginRight","border","borderRadius","textAlign","placeholder","this","onChange","Modal","onClose","onOpen","Header","Actions","labelPosition","positive","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA0CeA,EAzCD,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACnC,OACE,mCACE,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACC,EAAA,EAAD,CAAMC,QAAQ,EAAMC,OAAO,EAAMC,SAAS,OAA1C,SACE,qBAAKL,MAAO,CAAEC,QAAS,QAAvB,SACE,eAACC,EAAA,EAAKI,QAAN,WACE,eAACJ,EAAA,EAAKK,YAAN,WAEGV,EAED,cAACW,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,MACNC,QAAQ,SACRC,QAAS,kBAAMd,EAAaD,IAC5BgB,MAAI,EACJC,QAAQ,QANV,SAOC,cAACC,EAAA,EAAD,CAAMC,KAAK,sBAEZ,cAACR,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNC,QAAQ,OACRC,QAAS,kBAAMb,EAAYF,IAC7BgB,MAAI,EACJC,QAAQ,QANR,SAQE,cAACC,EAAA,EAAD,CAAMC,KAAK,cAKf,mCCxBCC,EATF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUpB,EAAiC,EAAjCA,aAAeC,EAAkB,EAAlBA,YACvC,OACE,mCACGmB,EAASC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAOvB,KAAMuB,EAAGtB,aAAcA,EAAeC,YAAcA,UCyIpDsB,E,kDAzIb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAWVC,IAAI,WACF,EAAKC,SAAS,CAACC,MAAM,EAAKC,MAAMD,QAbb,EAenBE,WAAa,SAACC,GACZ,EAAKJ,SAAS,CAAE3B,KAAM+B,EAAMC,OAAOC,SAhBlB,EAkBnBC,UAAY,WACa,IAAnB,EAAKL,MAAM7B,KACb,EAAK2B,SAAS,CAAEQ,OAAQ,kBAExB,EAAKR,SAAS,CAAEN,SAAS,CAAE,EAAKQ,MAAM7B,MAAd,mBAAuB,EAAK6B,MAAMR,aAE1D,EAAKM,SAAS,CAAE3B,KAAM,QAxBP,EA2BnBC,aAAe,SAACD,GACd,EAAK2B,SAAS,CACZN,SAAU,EAAKQ,MAAMR,SAASe,QAAO,SAACC,GAAD,OAAUA,GAAQrC,QA7BxC,EAgCnBsC,WAAW,WACT,IAAIC,EAAK,EAAKC,IACVC,EAAK,EAAKZ,MAAMa,MACrB,EAAKf,SAAS,CACXN,SAAU,EAAKQ,MAAMR,SAASC,KAAI,SAACqB,GAC9B,OAAIJ,GAAQI,EACH,YAAKF,GAEL,YAAKE,QAIjB,EAAKjB,OA5CQ,EA8CrBxB,YAAY,SAACF,GAEX,EAAKwC,IAAIxC,EACT,EAAK0B,OAjDc,EAoDrBkB,YAAY,SAACb,GACb,EAAKJ,SAAS,CAACe,MAAMX,EAAMC,OAAOC,SAnD9B,EAAKJ,MAAQ,CACX7B,KAAM,GACNqB,SAAU,GACVc,OAAQ,GACRP,MAAK,EACLc,MAAM,IAPS,S,0CAuDnB,WACE,OACE,mCACE,qBACEvC,MAAO,CACL0C,gBAAiB,uBACjBC,eAAgB,QAChBC,OAAQ,SACRC,MAAO,QALX,SAQE,sBACE7C,MAAO,CACL8C,gBAAiB,QACjBC,WAAY,QACZC,YAAa,QAEbC,OAAQ,sCACRC,aAAc,QAPlB,UAUE,oBAAIlD,MAAO,CAAEU,MAAO,UAAWyC,UAAW,UAA1C,wBAIA,uBACEC,YAAY,aACZtB,MAAOuB,KAAK3B,MAAM7B,KAClByD,SAAUD,KAAK1B,WACf3B,MAAO,CAAE+C,WAAY,WAEvB,4BAAIM,KAAK3B,MAAMM,SACf,cAACxB,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNE,QAASyC,KAAKtB,UACd/B,MAAO,CAAE+C,WAAY,SAJvB,iBAQA,uBACA,uBAEA,cAAC,EAAD,CACE7B,SAAUmC,KAAK3B,MAAMR,SACrBpB,aAAcuD,KAAKvD,aACnBC,YAAasD,KAAKtD,cAEnB,eAACwD,EAAA,EAAD,CACPC,QAASH,KAAK9B,IACdkC,OAAQJ,KAAK9B,IACbE,KAAM4B,KAAK3B,MAAMD,KAHV,UAMP,cAAC8B,EAAA,EAAMG,OAAP,iCACA,cAACH,EAAA,EAAMjD,QAAP,UAEE,cAACiD,EAAA,EAAMhD,YAAP,UAEC,uBAAO+C,SAAUD,KAAKZ,YAAaX,MAAOuB,KAAK3B,MAAMa,YAIxD,eAACgB,EAAA,EAAMI,QAAP,WACE,cAACnD,EAAA,EAAD,CAAQE,MAAM,QAAQE,QAASyC,KAAK9B,IAApC,oBAGA,cAACf,EAAA,EAAD,CACEG,QAAQ,OACRiD,cAAc,QACd/C,KAAK,YACLD,QAASyC,KAAKlB,WACd0B,UAAQ,qB,GAhIAC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46a23da2.chunk.js","sourcesContent":["import { Card, Button,Icon} from \"semantic-ui-react\";\r\nconst Card1 = ({ data, handleDelete, handleModal }) => {\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"30px\" }}>\r\n        <Card raised={true} fluid={true} centered=\"true\">\r\n          <div style={{ padding: \"30px\" }}>\r\n            <Card.Content>\r\n              <Card.Description>\r\n                \r\n                {data}\r\n               \r\n                <Button\r\n                  basic\r\n                  color=\"red\"\r\n                  content=\"DELETE\"\r\n                  onClick={() => handleDelete(data)}\r\n                  icon\r\n                  floated='right'\r\n                ><Icon name=\"trash alternate\"/>\r\n                  </Button>\r\n                <Button\r\n                  basic\r\n                  color=\"blue\"\r\n                  content=\"EDIT\"\r\n                  onClick={() => handleModal(data)}\r\n                icon\r\n                floated='right'\r\n                >\r\n                  <Icon name=\"edit\"/>\r\n                </Button>\r\n               \r\n              </Card.Description>\r\n\r\n              <br />\r\n            </Card.Content>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Card1;\r\n","import Card1 from \"./Card1\";\r\nconst Map1 = ({ dataList, handleDelete,  handleModal }) => {\r\n  return (\r\n    <>\r\n      {dataList.map((d) => (\r\n        <Card1 data={d} handleDelete={handleDelete}  handleModal={ handleModal} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default Map1;\r\n","import React from \"react\";\nimport { Button,Modal } from \"semantic-ui-react\";\n\nimport Map1 from \"./Map1\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n      dataList: [],\n      error1: \"\",\n      open:false,\n      text1:\"\",\n    };\n    let str=\"\";\n  }\n\nfun=()=>{\n  this.setState({open:!this.state.open});\n}\n  handleData = (event) => {\n    this.setState({ data: event.target.value });\n  };\n  handleAdd = () => {\n    if (this.state.data == \"\") {\n      this.setState({ error1: \"enter title.\" });\n    } else {\n      this.setState({ dataList: [this.state.data, ...this.state.dataList] });\n\n      this.setState({ data: \" \" });\n    }\n  };\n  handleDelete = (data) => {\n    this.setState({\n      dataList: this.state.dataList.filter((post) => post != data),\n    });\n  };\n  handleEdit=()=>{\n    let old1=this.str;\n    let new1=this.state.text1;\n   this.setState({\n      dataList: this.state.dataList.map((Tpost) => {\n       \t\t\t if (old1 == Tpost) {\n         \t\t\t return [ ...new1];\n       \t\t\t\t\t } else {\n         \t\t\t return [ ...Tpost ];\n       \t\t\t\t }\n     \t\t\t }),\n    \t\t});\n        this.fun();\n  }\nhandleModal=(data)=>{\n  \n  this.str=data;\n  this.fun();\n}\n\nhandleText1=(event)=>{\nthis.setState({text1:event.target.value});\n}\n  render() {\n    return (\n      <>\n        <div\n          style={{\n            backgroundImage: \"url(\" + \"./images/b2.jpg\" + \")\",\n            backgroundSize: \"cover\",\n            height: \"1500px\",\n            width: \"100%\",\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: \"white\",\n              marginLeft: \"350px\",\n              marginRight: \"400px\",\n\n              border: \"4px solid rgba(247, 141, 167, 0.73)\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <h1 style={{ color: \"#0E6EB8\", textAlign: \"center\" }}>\n              TO DO LIST\n            </h1>\n\n            <input\n              placeholder=\"Enter here\"\n              value={this.state.data}\n              onChange={this.handleData}\n              style={{ marginLeft: \"162px\" }}\n            />\n            <p>{this.state.error1}</p>\n            <Button\n              basic\n              color=\"teal\"\n              onClick={this.handleAdd}\n              style={{ marginLeft: \"220px\" }}\n            >\n              Add\n            </Button>\n            <br />\n            <br />\n\n            <Map1\n              dataList={this.state.dataList}\n              handleDelete={this.handleDelete}\n              handleModal={this.handleModal}\n            />\n             <Modal\n      onClose={this.fun}\n      onOpen={this.fun}\n      open={this.state.open}\n      \n    >\n      <Modal.Header>UPDATE INFORMATION</Modal.Header>\n      <Modal.Content>\n       \n        <Modal.Description>\n          \n         <input onChange={this.handleText1} value={this.state.text1}/>\n      \n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='black' onClick={this.fun}>\n          CANCEL\n        </Button>\n        <Button\n          content=\"SAVE\"\n          labelPosition='right'\n          icon='checkmark'\n          onClick={this.handleEdit}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}